@using System.Globalization
@using Microsoft.AspNetCore.Builder
@using PadWiki.WebApp.Pages
@inject IJSRuntime  JSRuntime
@inject NavigationManager Navigation
@inject IStringLocalizer<CultureSelector> Localizer

<MudImage Alt="flag" Src="@($"media/images/flags/{CultureInfo.CurrentCulture.Name}.svg")" Height="14" Style="vertical-align: middle;"/>
<MudMenu Label="@GetFriendlyLanguageName(CultureInfo.CurrentCulture.Name)" Dense="false" Color="Color.Primary">
    @foreach (var culture in _cultures)
    {
        <MudMenuItem OnClick="() => SetCulture(CultureInfo.GetCultureInfo(culture.Name))">
            <MudItem Style="display: flex; align-items: center;">
                <MudImage Alt="flag" Src="@($"media/images/flags/{culture.Name}.svg")" Height="14" Style="vertical-align: middle;"/>
                <MudText class="mx-5">@GetFriendlyLanguageName(culture.Name)</MudText>
            </MudItem>
        </MudMenuItem>
    }
</MudMenu>

@code
{
    private string GetFriendlyLanguageName(string cultureName)
    {
        var languageNames = new Dictionary<string, string>
        {
            { "en-US", "English" },
            { "es-MX", "Mexico" },
            { "pl-PL", "Poland" },
            { "pt-BR", "Brazil" },
            { "pt-PT", "Portugal" },
            { "ru-RU", "Russia" }
        };
    
        if (languageNames.ContainsKey(cultureName))
        {
            return languageNames[cultureName];
        }
        else
        {
            return cultureName;
        }
    }

    private CultureInfo[] _cultures = new[]
    {
        CultureInfo.GetCultureInfo("en-US"),
        CultureInfo.GetCultureInfo("es-MX"),
        CultureInfo.GetCultureInfo("pl-PL"),
        CultureInfo.GetCultureInfo("pt-BR"),
        CultureInfo.GetCultureInfo("pt-PT"),
        CultureInfo.GetCultureInfo("ru-RU")
    };
    
    public void SetCulture(CultureInfo culture)
    {
        if (!CultureInfo.CurrentCulture.Equals(culture) && _cultures.Contains(culture))
        {
            IJSInProcessRuntime js = (IJSInProcessRuntime)JSRuntime;
            js.InvokeVoid("blazorCulture.set", culture.Name);
            Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
        }
    }
}